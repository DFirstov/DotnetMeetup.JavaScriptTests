version: '3.4'

services: 
  db:
    container_name: js-tests-db
    image: postgres:12.7-alpine
    environment:
      POSTGRES_PASSWORD: js-tests
    ports:
      - '5432:5432'

  mock:
    container_name: js-tests-mock
    image: wiremock/wiremock:2.32.0
    ports:
      - '5433:8080'
    volumes:
      - ./Mocks:/home/wiremock/mappings
        
  zookeeper:
    container_name: js-tests-zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - '2181:2181'

  kafka:
    container_name: js-tests-kafka
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "CLIENT://kafka:9092,EXTERNAL://127.0.0.1:9093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "CLIENT"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - '9092:9092'
      - '9093:9093'
    depends_on:
      - zookeeper

  kafka-init:
    container_name: js-tests-kafka-init
    image: confluentinc/cp-kafka:latest
    depends_on: 
      - kafka
    command: "bash -c 'cub zk-ready zookeeper:2181 600 && \
                       cub kafka-ready -b kafka:9092 1 600 && \
                       kafka-topics \
                         --create \
                         --if-not-exists \
                         --bootstrap-server kafka:9092 \
                         --replication-factor 1 \
                         --partitions 1 \
                         --topic ga-created'"
    profiles:
      - kafka-init
